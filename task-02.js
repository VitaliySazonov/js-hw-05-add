// Створити класи Library та Book
// Клас Library буде описувати нашу бібліотеку книжок. Всі книжки
// будуть зберігатися в масиві.
// Також цей клас буде мати такі методи:
// Метод <strong>buy</strong> - це метод що приймає аргументом
// обєкт книги і додає її в бібліотеку якщо її там ще немає.
// Якщо книга вже є показує повідомлення що книга вже куплена
// Метод <strong>sell</strong> - це метод що приймає аргументом
// назву книги і видаляє її з бібліотеки
// Метод <strong>addToFavourite</strong> - це метод що приймає
// аргументом назву книги і додає обєкт книги в список
// улюблених
// Метод <strong>removeFromFavourite</strong> - це метод що
// приймає назву книги і видаляє її з списку улюблених
// Гетер <strong>сountFavouriteBooks</strong> - це гетер що
// показує кількість книжок що додані в улюблені
// Гетер <strong>finishedBook</strong> - це гетер що містить
// колекцію всіх прочитаних книжок
// Метод <strong>totalCost</strong> - це метод що рахує
// вартість всіх книжок в бібліотеці

// Клас Book буде описувати окрему книгу. Кожна книга це буде обєкт
// з такими ключами
// <ul>
// <li>author</li>
// <li>title</li>
// <li>price</li>
// <li>totalPages</li>
// <li>currentPage</li>
// </ul>
// Також цей клас буде мати такі методи:
// Метод <strong>read</strong> - це метод що приймає кількість
// сторінок що було прочитано і міняє значення currentPage
// Гетер <strong>bookProgres</strong> - гетер що переводить
// кількість прочитаних сторінок в відсотки
// Сетер <strong>bookProgres</strong> - сетер що переводить
// відсоток прочитаних сторінок в кількість
// Клас Book приймає один аргумент - обєкт з парметрами книги. В
// середині класу використовувати деструктуризацію обєкта

class Library {
  constructor() {
  
  }
}

class Book {
  constructor() {
  
  }
}